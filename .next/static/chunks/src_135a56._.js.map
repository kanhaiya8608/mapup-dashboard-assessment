{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\n\r\nimport SummaryStatistics from './SummaryStatistics';\r\nimport BarChart from './BarChart';\r\nimport PieChart from './PieChart.js';\r\nimport { FaCar, FaBatteryFull, FaPlug } from 'react-icons/fa';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\r\n\r\n// Register chart components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);\r\n\r\nexport default function Dashboard({ evData }) {\r\n  const totalEVs = evData.length;\r\n\r\n  const byType = evData.reduce((acc, row) => {\r\n    acc[row['Electric Vehicle Type']] = (acc[row['Electric Vehicle Type']] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const modelYears = evData.reduce((acc, row) => {\r\n    acc[row['Model Year']] = (acc[row['Model Year']] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const makes = evData.reduce((acc, row) => {\r\n    acc[row.Make] = (acc[row.Make] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const counties = evData.reduce((acc, row) => {\r\n    acc[row.County] = (acc[row.County] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const electricRanges = evData.filter(row => row['Electric Range'] > 0).map(row => row['Electric Range']);\r\n  const prices = evData.filter(row => row['Base MSRP'] > 0).map(row => row['Base MSRP']);\r\n\r\n  // Chart data and options creation logic remains unchanged...\r\n  const dataByYear = {\r\n    labels: Object.keys(modelYears),\r\n    datasets: [{\r\n      label: 'Count of EVs by Model Year',\r\n      data: Object.values(modelYears),\r\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n    }],\r\n  };\r\n\r\n  const dataByMake = {\r\n    labels: Object.keys(makes),\r\n    datasets: [{\r\n      label: 'Distribution of EVs by Make',\r\n      data: Object.values(makes),\r\n      backgroundColor: 'rgba(153, 102, 255, 0.6)',\r\n    }],\r\n  };\r\n\r\n  const dataByCounty = {\r\n    labels: Object.keys(counties),\r\n    datasets: [{\r\n      label: 'Count of EVs by County',\r\n      data: Object.values(counties),\r\n      backgroundColor: 'rgba(255, 206, 86, 0.6)',\r\n    }],\r\n  };\r\n\r\n  const pieData = {\r\n    labels: Object.keys(byType),\r\n    datasets: [{\r\n      data: Object.values(byType),\r\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)'],\r\n    }],\r\n  };\r\n\r\n  // ...remaining logic for calculating average MSRP, price ranges, and chart data...\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 bg-white \">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-center\">Electric Vehicle Dashboard</h1>\r\n\r\n      {/* Render Summary Statistics */}\r\n      <SummaryStatistics totalEVs={totalEVs} byType={byType} />\r\n\r\n      {/* Render Bar Charts */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n        <div className=\"bg-gray-100 p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">EVs by Model Year</h2>\r\n          <BarChart data={dataByYear} options={optionsByYear} />\r\n        </div>\r\n        <div className=\"bg-gray-100 p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">EVs by Make</h2>\r\n          <BarChart data={dataByMake} options={optionsByMake} />\r\n        </div>\r\n        <div className=\"bg-gray-100 p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">EVs by County</h2>\r\n          <BarChart data={dataByCounty} options={optionsByCounty} />\r\n        </div>\r\n        <div className=\"bg-gray-100 p-4 rounded-lg shadow\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">Average Base MSRP by Model Year</h2>\r\n          <div style={{ maxHeight: '300px' }}>\r\n            <BarChart data={dataByYearPrice} options={optionsByYearPrice} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Render Pie Chart */}\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">EV Eligibility (CAFV)</h2>\r\n        <div className=\"bg-gray-100 p-4 rounded-lg shadow flex justify-center\">\r\n          <div style={{ width: '250px', height: '250px' }}>\r\n            <PieChart data={pieData} options={{ responsive: true }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Render Price Range Bar Chart */}\r\n      <div>\r\n        <h2 className=\"text-lg font-semibold mb-2\">Count of EVs by Price Range</h2>\r\n        <div className=\"bg-gray-100 p-4 rounded-lg shadow\">\r\n          <div style={{ height: 'auto' }}>\r\n            <BarChart data={dataByPrice} options={optionsByPrice} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}